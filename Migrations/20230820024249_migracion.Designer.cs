// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI_tutorial_recursos.Context;

#nullable disable

namespace WebAPI_tutorial_recursos.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20230820024249_migracion")]
    partial class migracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI_tutorial_recursos.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Update")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Creation = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(63),
                            Name = "Gonzalo",
                            Update = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(74)
                        },
                        new
                        {
                            Id = 2,
                            Creation = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(77),
                            Name = "Ramiro",
                            Update = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(77)
                        },
                        new
                        {
                            Id = 3,
                            Creation = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(78),
                            Name = "Daniel",
                            Update = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(79)
                        },
                        new
                        {
                            Id = 4,
                            Creation = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(80),
                            Name = "Gastón",
                            Update = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(80)
                        },
                        new
                        {
                            Id = 5,
                            Creation = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(81),
                            Name = "Martín",
                            Update = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(82)
                        });
                });

            modelBuilder.Entity("WebAPI_tutorial_recursos.Models.AuthorBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("WebAPI_tutorial_recursos.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Update")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Creation = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(200),
                            Title = "El libro de la selva",
                            Update = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(201)
                        },
                        new
                        {
                            Id = 2,
                            Creation = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(202),
                            Title = "La vida de Steve Jobs",
                            Update = new DateTime(2023, 8, 19, 23, 42, 49, 660, DateTimeKind.Local).AddTicks(203)
                        });
                });

            modelBuilder.Entity("WebAPI_tutorial_recursos.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("WebAPI_tutorial_recursos.Models.AuthorBook", b =>
                {
                    b.HasOne("WebAPI_tutorial_recursos.Models.Author", "Author")
                        .WithMany("AuthorsBooks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI_tutorial_recursos.Models.Book", "Book")
                        .WithMany("AuthorsBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("WebAPI_tutorial_recursos.Models.Review", b =>
                {
                    b.HasOne("WebAPI_tutorial_recursos.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("WebAPI_tutorial_recursos.Models.Author", b =>
                {
                    b.Navigation("AuthorsBooks");
                });

            modelBuilder.Entity("WebAPI_tutorial_recursos.Models.Book", b =>
                {
                    b.Navigation("AuthorsBooks");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
